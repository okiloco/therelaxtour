{"version":3,"sources":["components/com/form/AdvancedForm.js","layouts/layout_center.js","components/authentication/ChangePasswordForm.js","views/authentication/change-password/ChangePassword.js"],"names":["footerStyle","marginTop","Tools","styled","div","HeadTitle","AdvancedForm","props","handleSubmit","e","preventDefault","form","validateFields","err","values","onSubmit","handleReset","resetFields","toggle","expand","state","setState","handleChange","key","value","onChange","setFieldsValue","checkdate","rule","callback","record","formLayout","me","this","getFieldDecorator","children","initialValues","childrens","formItemLayout","span","childNodes","React","Children","map","child","index","name","label","labelAlign","help","required","message","validations","style","initial","initialValue","type","xtype","reference","flex","className","format","mode","feedback","onRender","latName","lngName","getFieldsValue","Object","moment","allRequired","filter","it","validator","length","push","getFieldValue","pattern","RegExp","a","test","Error","width","height","margin","padding","display","Item","hasFeedback","validateTrigger","valuePropName","rules","lng","lat","Array","isArray","join","target","checked","cloneElement","trigger","onBlur","capitalize","match","replace","formatterPhone","console","log","onMount","nexProps","footer","title","titleStyle","autoSubmit","textAcceptButton","actions","layout","gutter","getFields","justify","align","disabled","loading","submitting","size","htmlType","buttonSubmitStyle","textAlign","onClick","Component","WrappedAdvancedForm","create","Content","Container","LayoutCanter","background","minHeight","backgroundColor","backgroundPosition","backgroundSize","backgroundRepeat","Form","HeadLine","Footer","connect","dispatch","translate","t","token","user","useDispatch","useState","changed","useEffect","navigate","actionTypes","data","error","getService","patch","token_reset_password","then","success","info","catch","block","to","window","location","origin","Password","prefix","color","placeholder","ChangePassword"],"mappings":"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","file":"static/js/20.4d0875fe.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Row, Col, Button, Divider } from \"antd\";\r\nimport \"./form.css\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nconst footerStyle = {\r\n  marginTop: 20\r\n};\r\nconst formatter = value => {\r\n  var cleaned = (\"\" + value).replace(/\\D/g, \"\");\r\n  var match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\r\n  if (match) {\r\n    return \"(\" + match[1] + \") \" + match[2] + \"-\" + match[3];\r\n  }\r\n  return null;\r\n};\r\nconst formatterPhone = value => {\r\n  var cleaned = (\"\" + value).replace(/\\D/g, \"\");\r\n  var match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\r\n  if (match) {\r\n    return \"(\" + match[1] + \") \" + match[2] + \"-\" + match[3];\r\n  }\r\n  return null;\r\n};\r\nconst Tools = styled.div`\r\n  display: flex;\r\n  & .ant-btn {\r\n    margin: 0px 4px;\r\n  }\r\n`;\r\nconst HeadTitle = styled.div`\r\n  h2 {\r\n    font-size: 24px !important;\r\n    font-style: normal!important;\r\n    text-align: center !important;\r\n    color: var(--color-gray-dark);\r\n  }\r\n`;\r\nclass AdvancedForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expand: false,\r\n      record: {},\r\n      formLayout: \"vertical\"\r\n    };\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (typeof this.props.onSubmit !== \"undefined\") {\r\n        this.props.onSubmit(err, values, this.props.form, e);\r\n        //if (!err) this.props.form.resetFields();\r\n      }\r\n    });\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.props.form.resetFields();\r\n  };\r\n  toggle = () => {\r\n    const { expand } = this.state;\r\n    this.setState({ expand: !expand });\r\n  };\r\n  handleChange = (key, value) => {\r\n    //console.log(key, value)\r\n    if (this.props.onChange) this.props.onChange(key, value, this.props.form);\r\n    this.props.form.setFieldsValue({\r\n      [key]: value\r\n    });\r\n  };\r\n  checkdate = (rule, value, callback) => {\r\n    if (value) {\r\n      callback();\r\n      return;\r\n    }\r\n    callback(\"Date is required!\");\r\n  };\r\n  // To generate mock Form.Item\r\n  getFields() {\r\n    const me = this;\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { children, initialValues } = this.props;\r\n    let childrens = [];\r\n\r\n    let { formLayout, record } = this.state;\r\n    formLayout = this.props.formLayout || formLayout;\r\n\r\n    //console.log(\"formLayout:: \",formLayout);\r\n    const formItemLayout =\r\n      formLayout === \"vertical\"\r\n        ? {\r\n            span: 12\r\n          }\r\n        : null;\r\n\r\n    if (typeof children !== \"undefined\") {\r\n      try {\r\n        let { props } = children;\r\n        let childNodes = props.children || [];\r\n        childrens = React.Children.map(childNodes, (child, index) => {\r\n          if (!child) return child;\r\n          let field = {};\r\n          let {\r\n            name,\r\n            label,\r\n            labelAlign,\r\n            help,\r\n            required,\r\n            message,\r\n            validations,\r\n            style,\r\n            initial,\r\n            initialValue,\r\n            onChange,\r\n            type,\r\n            xtype,\r\n            reference,\r\n            flex,\r\n            className,\r\n            format,\r\n            mode,\r\n            feedback = false,\r\n            onRender\r\n          } = child.props;\r\n\r\n          name = typeof name === \"undefined\" ? `field_${index}` : name;\r\n\r\n          style = style || {};\r\n\r\n          /* InitialValue Map */\r\n          let { latName = \"lat\", lngName = \"lng\" } = child.props;\r\n          let { form } = me.props;\r\n          if (xtype === \"map\") {\r\n            let values = form.getFieldsValue([latName, lngName]);\r\n            /* form.setFieldsValue({ [lngName]: values[lngName] });\r\n            form.setFieldsValue({ [latName]: values[latName] }); */\r\n            initialValue = Object.values(values);\r\n            //console.log(\"Values: \", initialValue, values);\r\n          }\r\n\r\n          if (initialValues) initialValue = initialValues[name];\r\n\r\n          // console.log(\">>>>>initialValues:\", initialValues)\r\n          if (xtype == \"date\" && initialValues) {\r\n            if (initialValues[name]) initialValue = moment(initialValues[name]);\r\n          }\r\n          validations = validations || [\r\n            {\r\n              required: required || this.props.allRequired || false,\r\n              message: message || `${label} es requerido`\r\n            }\r\n          ];\r\n\r\n          if (reference) {\r\n            if (validations.filter(it => it.validator).length === 0) {\r\n              validations.push({\r\n                validator: (rule, value, callback) => {\r\n                  if (value && value !== form.getFieldValue(reference)) {\r\n                    callback(\"Two passwords that you enter is inconsistent!\");\r\n                  } else {\r\n                    callback();\r\n                  }\r\n                }\r\n              });\r\n            }\r\n          }\r\n          /* validations.push({\r\n            validator: async (rule, value) => {\r\n              var mediumRegex = /([A-Z]{0,1}[\\w]+){9,9}/g;\r\n              if (mediumRegex.test(value)) {\r\n                //console.log(\"green\");\r\n              } else {\r\n                throw new Error(\r\n                  value ? \"Badly formed!!\" : \"The is required\"\r\n                );\r\n              }\r\n            }\r\n          }); */\r\n          if (type === \"email\") {\r\n            validations.push({\r\n              type: \"regexp\",\r\n              pattern: new RegExp(\r\n                \"^([a-zd.-]+)@([a-zd-]+).([a-z]{2,8})(.[a-z]{2,8})?$\"\r\n              ),\r\n              message: \"Wrong format!\"\r\n            });\r\n          }\r\n          if (xtype === \"password\") {\r\n            if (validations.filter(it => it.validator).length === 0) {\r\n              validations.push({\r\n                validator: async (rule, value) => {\r\n                  var mediumRegex = new RegExp(\r\n                    \"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\"\r\n                  );\r\n                  if (mediumRegex.test(value)) {\r\n                    //console.log(\"green\");\r\n                  } else {\r\n                    throw new Error(\r\n                      value\r\n                        ? \"Badly formed password!!\"\r\n                        : \"The password is required\"\r\n                    );\r\n                  }\r\n                }\r\n              });\r\n            }\r\n          }\r\n          if (xtype == \"phone\") {\r\n          }\r\n          delete child.value;\r\n          if (type === \"hidden\")\r\n            style = {\r\n              width: \"100%\",\r\n              height: 0,\r\n              margin: 0,\r\n              padding: 0\r\n            };\r\n\r\n          if (flex <= 1) style[\"width\"] = `${flex * 100}%`;\r\n          if (!child.type || typeof child == \"undefined\") {\r\n            return null;\r\n          }\r\n          return (\r\n            <Col\r\n              {...formItemLayout}\r\n              key={name || `field-${index}`}\r\n              style={{ padding: 5, display: \"inline-block\", ...style }}\r\n              className={`${\r\n                typeof className !== \"undefined\"\r\n                  ? \"item-form \" + className\r\n                  : \"item-form\"\r\n              } ${type === \"hidden\" ? \"item-hidden\" : \"\"} ${\r\n                xtype === \"fieldset\" ? \"field-set\" : \"\"\r\n              }`}\r\n            >\r\n              <Form.Item\r\n                /* className={className} */\r\n                label={label}\r\n                labelAlign={labelAlign || \"right\"}\r\n                hasFeedback={reference != null}\r\n                help={help}\r\n              >\r\n                {getFieldDecorator(name || `field-${index}`, {\r\n                  initialValue: initialValue || initial,\r\n                  /*  trigger: \"focus\", */\r\n                  validateTrigger: \"onChange\",\r\n                  /* trigger: \"dateChange\", */\r\n                  valuePropName: \"value\",\r\n\r\n                  rules: validations,\r\n\r\n                  onChange: function(key, value) {\r\n                    let { form } = me.props;\r\n\r\n                    if (xtype === \"map\") {\r\n                      /*  let { latName = \"lat\", lngName = \"lng\" } = child.props; */\r\n                      value = key;\r\n                      let { lng, lat } = value;\r\n                      form.setFieldsValue({ [lngName]: lng });\r\n                      form.setFieldsValue({ [latName]: lat });\r\n                    }\r\n\r\n                    if (value)\r\n                      if (typeof value === \"object\") {\r\n                        value = key;\r\n                        if (Array.isArray(key)) {\r\n                          value = value.join(\",\");\r\n                        }\r\n                        /* if (Array.isArray(value)) {\r\n                          if (mode === \"multiple\") {\r\n                            console.log(\"VALUE:: \", key, value);\r\n                            value = value.map(item => {\r\n                              let { props } = item;\r\n                              return props.value;\r\n                            });\r\n                          }\r\n                          value = value.join(\",\");\r\n                        } else {\r\n                          value = key;\r\n                        } */\r\n                      }\r\n                    if (xtype === \"checkbox\") {\r\n                      let { checked } = key.target;\r\n                      value = checked;\r\n                    }\r\n                    if (xtype === \"checkbox-group\") {\r\n                      value = key;\r\n                    }\r\n\r\n                    if (typeof key === \"object\") {\r\n                      if (key) if (\"target\" in key) value = key.target.value;\r\n                    } else {\r\n                      if (key != name) value = key;\r\n                    }\r\n\r\n                    if (xtype != \"fieldset\") {\r\n                      me.handleChange(name, value);\r\n                      if (typeof onChange !== \"undefined\")\r\n                        onChange(name, value, form);\r\n                    } else {\r\n                      let { name, checked } = key.target;\r\n                      /* me.handleChange(name, value); */\r\n                      if (typeof onChange !== \"undefined\")\r\n                        onChange(name, value || checked, form);\r\n                    }\r\n                  }\r\n                })(\r\n                  React.cloneElement(child, {\r\n                    style: { width: \"100%\" },\r\n                    trigger: \"focus\",\r\n                    onBlur: e => {\r\n                      if (xtype == \"capitalize\") {\r\n                        let value = e.target.value;\r\n                        form.setFieldsValue({\r\n                          [name]:\r\n                            typeof value == \"string\"\r\n                              ? value.capitalize()\r\n                              : value\r\n                        });\r\n                      }\r\n                      if (xtype == \"phonefield\") {\r\n                        let value = e.target.value;\r\n                        form.setFieldsValue({\r\n                          [name]:\r\n                            typeof value == \"string\"\r\n                              ? formatterPhone(value)\r\n                              : value\r\n                        });\r\n                      }\r\n                    },\r\n                    form\r\n                  })\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          );\r\n        });\r\n      } catch (err) {\r\n        console.log(\"ERROR: \", err);\r\n      }\r\n    }\r\n\r\n    return childrens;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { formLayout } = this.props;\r\n    if (typeof formLayout !== \"undefined\")\r\n      this.setState({\r\n        formLayout\r\n      });\r\n\r\n    if (this.props.onMount) this.props.onMount(this.props.form);\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.form.resetFields();\r\n  }\r\n  componentWillReceiveProps(nexProps) {\r\n    let { initialValues, record } = nexProps;\r\n    this.setState({\r\n      record\r\n    });\r\n    //console.log(\"?????????? RECORD::\", record)\r\n  }\r\n  render() {\r\n    const { formLayout } = this.state;\r\n    let {\r\n      footer,\r\n      title,\r\n      titleStyle,\r\n      className,\r\n      style,\r\n      autoSubmit = true,\r\n      textAcceptButton = \"SAVE\",\r\n      //this.props. = false,\r\n      initialValues,\r\n      actions,\r\n      form\r\n    } = this.props;\r\n    return (\r\n      <Form\r\n        className={className || \"advanced-form\"}\r\n        layout={formLayout}\r\n        onSubmit={this.handleSubmit}\r\n        style={style || { margin: 20 }}\r\n      >\r\n        {title && <HeadTitle className=\"head-title\">{title}</HeadTitle>}\r\n        <Row className=\"form-fields\" gutter={24}>\r\n          {this.getFields()}\r\n        </Row>\r\n        <Row\r\n          className={\r\n            typeof footer !== \"undefined\" ? \"footer-advanced-form\" : null\r\n          }\r\n        >\r\n          {autoSubmit ? (\r\n            <>\r\n              <Row type=\"flex\" justify=\"center\">\r\n                <Col span={24}>\r\n                  <Divider\r\n                    style={{\r\n                      width: \"100%\",\r\n                      margin: \"20px 0px 20px 0px\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col span={24} align=\"center\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={this.props.disabled}\r\n                    loading={this.props.submitting}\r\n                    size=\"large\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button btn-green\"\r\n                    style={\r\n                      this.props.buttonSubmitStyle || {\r\n                        width: \"50%\",\r\n                        margin: \"10px 0px\",\r\n                        textAlign: \"center\"\r\n                      }\r\n                    }\r\n                    size=\"large\"\r\n                    block\r\n                  >\r\n                    {textAcceptButton}\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Row\r\n                style={footerStyle}\r\n                type=\"flex\"\r\n                justify=\"center\"\r\n                align=\"middle\"\r\n              >\r\n                <Col span={24}>{footer}</Col>\r\n                <Col span={24}>\r\n                  {!autoSubmit && (\r\n                    <Divider\r\n                      style={{\r\n                        width: \"100%\",\r\n                        margin: \"20px 0px 20px 0px\"\r\n                      }}\r\n                    />\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </>\r\n          ) : (\r\n            <Row\r\n              style={footerStyle}\r\n              type=\"flex\"\r\n              justify=\"center\"\r\n              align=\"middle\"\r\n            >\r\n              <Col span={24}>{footer}</Col>\r\n            </Row>\r\n          )}\r\n        </Row>\r\n        {actions && (\r\n          <Tools\r\n            style={{\r\n              margin: \"10px 4px\"\r\n            }}\r\n          >\r\n            {actions &&\r\n              actions.props &&\r\n              React.Children.map(actions.props.children, (child, index) => {\r\n                let { onClick } = child.props;\r\n                return React.cloneElement(child, {\r\n                  onClick: e => {\r\n                    if (onClick) onClick(e, form);\r\n                  }\r\n                });\r\n              })}\r\n          </Tools>\r\n        )}\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nconst WrappedAdvancedForm = Form.create({ name: \"search_form\" })(AdvancedForm);\r\n\r\nexport default WrappedAdvancedForm;\r\n","import React from \"react\";\nimport { Layout, Row, Col } from \"antd\";\nimport styled from \"styled-components\";\n\nconst { Content } = Layout;\n\nconst Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst LayoutCanter = ({ children, background, ...props }) => {\n  return (\n    <Layout style={{ minHeight: \"100vh\", backgroundColor: \"#FFF!important\", }}>\n      <Layout>\n        <Content\n          style={{\n            background: `url(${background || \"/images/bg2.jpg\"})`,\n            backgroundPosition: \"center bottom\",\n            backgroundSize: \"100%\",\n            backgroundColor: \"#FFF\",\n            backgroundRepeat: \"no-repeat\",\n          }}\n        >\n          <Container>{children}</Container>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default LayoutCanter;\n","import React, { useEffect, useState } from \"react\";\nimport AdvancedForm from \"../com/form/AdvancedForm\";\nimport { Input, Button, Icon, Row, Col, message } from \"antd\";\nimport styled from \"styled-components\";\nimport { Link, navigate } from \"@reach/router\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actionTypes from \"../../constants/actionTypes\";\n\n/* import Logo from \"../../sources/images/logo-blue.svg\"; */\n\n/* Redux */\nimport { connect } from \"react-redux\";\n/* import * as actionTypes from \"../../store/actions\";\n */\n/* Services */\nimport { getService } from \"../../services/services\";\n/* import { change_password } from \"../../services\"; */\nimport { translate } from \"react-polyglot\";\nconst Form = styled(AdvancedForm)`\n  width: 400px;\n  background: #fafafa00;\n  padding: 40px 35px !important;\n  border: 1px solid #ccc;\n\n  box-shadow: 0 2px 10px -1px rgb(69 90 100 / 0%);\n  margin-bottom: 30px;\n  transition: box-shadow 0.2s ease-in-out;\n\n  border: 0px solid rgba(0, 0, 0, 0.125);\n  border-radius: 0.25rem;\n\n\n\n\n\n\n  & .item-form {\n    padding: 5px 20px !important;\n  }\n  & .ant-form-item input:focus {\n    box-shadow: none !important;\n  }\n  & .ant-form-item {\n    padding-bottom: 5px !important;\n    margin-bottom: 5px !important;\n  }\n  & .ant-form-item input {\n    border: 0px;\n    border-radius: 0px;\n    border-bottom: 1px solid #ccc;\n\n    padding: 0.625rem 1.1875rem;\n    font-size: 0.875rem;\n    font-weight: 400;\n    line-height: 1.5;\n  }\n  & .login-form-button {\n    text-transform: uppercase;\n    font-weight: bold;\n\n    margin-bottom: 1.5rem !important;\n\n    border: 1px solid transparent !important;\n    padding: 0.625rem 1.1875rem !important;\n    font-size: 0.875rem !important;\n    line-height: 1.5 !important;\n    border-radius: 2px !important;\n  }\n`;\nconst HeadLine = styled.div`\n  text-align: center;\n\n  & h2 {\n    font-size: 1.5rem;\n  }\n  & img {\n    margin-bottom: 1.5rem !important;\n  }\n`;\nconst Footer = styled(Row)`\n  & .ant-col {\n    margin-bottom: 0.5rem !important;\n  }\n`;\nconst ChangePasswordForm = ({ t, token, user, ...props }) => {\n  const dispatch = useDispatch();\n  const [changed, setChanged] = useState(false);\n  useEffect(() => {\n    if (changed)\n      navigate(\"/signin\");\n    return () => {\n      dispatch({\n        type: actionTypes.CHANGED_PASSWORD,\n        changed: false\n      });\n    };\n  }, [changed]);\n  const handleSubmit = async (err, data) => {\n    if (err) return message.error(err.message);\n    let service = getService(\"recovery-password\");\n    service\n      .patch(token, {\n        token_reset_password: token,\n        ...data\n      })\n      .then(({ success }) => {\n        message.info(\"Please Check your email!\");\n        navigate(\"/signin\");\n      })\n      .catch(err => message.error(err.message));\n  };\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      layout={\"vertical\"}\n      autoSubmit={false}\n      textAcceptButton=\"Change\"\n      footer={\n        <Footer type=\"flex\" justify=\"center\" align=\"middle\">\n          <Col span={24}>\n            <Button\n              block\n              size=\"large\"\n              style={{\n                width: \"100%\",\n                height: 40,\n                padding: 5,\n                margin: \"0px auto\",\n                textAlign: \"center\"\n              }}\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              {t(\"menu.changePasswordText\")}\n            </Button>\n          </Col>\n          <Col span={24} align=\"center\">\n            <Row\n              type=\"flex\"\n              justify=\"center\"\n              align=\"middle\"\n              style={{\n                margin: 10\n              }}\n            >\n              <Col span={24}>\n                <span>{t(\"signin.notAccountText\")}</span>{\" \"}\n                <Link to=\"/signin\">{t(\"signup.signinText\")}</Link>\n              </Col>\n              <Col span={24}>\n                <span>{t(\"signin.notAccountText\")}</span>{\" \"}\n                <Link to=\"/signup\">{t(\"signup.signupButtonText\")}</Link>\n              </Col>\n            </Row>\n          </Col>\n        </Footer>\n      }\n      title={<HeadLine\n        style={{\n          width: \"100%\"\n        }}\n      >\n        <h2 className=\"login-title\">\n          <span>{t(\"menu.changePasswordText\")}</span>\n        </h2>\n      </HeadLine>}\n    >\n      <>\n        <Input name=\"origin\" type=\"hidden\" initial={window.location.origin} />\n        <Input name=\"token\" type=\"hidden\" initial={token} />\n        <Input.Password\n          size=\"large\"\n          style={{ width: \"100%\" }}\n          type=\"password\"\n          prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          placeholder={t(\"changePaswordText\")}\n          name=\"password\"\n          validations={[{ required: true, message: t(\"erros.passwordError\") }]}\n        />\n        <Input.Password\n          size=\"large\"\n          style={{ width: \"100%\" }}\n          name=\"rp_password\"\n          type=\"password\"\n          reference={\"password\"}\n          type=\"password\"\n          prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          placeholder={t(\"changePasswordRepeatText\")}\n          validations={[{ required: true, message: t(\"erros.passwordError\") }]}\n        />\n      </>\n    </Form>\n  );\n};\nconst mapStateToProps = (state) => {\n  /*  return {\n     user: state.data.user,\n     changed: state.data.changed\n   }; */\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    /*  changePassword: params =>\n       dispatch({ type: actionTypes.CHANGE_PASSWORD, params }) */\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(translate()(ChangePasswordForm));\n","import React, { useEffect } from \"react\";\nimport ChangePasswordForm from \"../../../components/authentication/ChangePasswordForm\";\nimport LayoutCenter from \"../../../layouts/layout_center\";\nimport { message } from \"antd\";\nimport { navigate } from \"@reach/router\";\n\nconst ChangePassword = ({ token, ...props }) => {\n  useEffect(() => {\n    return () => {};\n  }, []);\n  return (\n    <LayoutCenter>\n      <ChangePasswordForm token={token} />\n    </LayoutCenter>\n  );\n};\n\nexport default ChangePassword;\n"],"sourceRoot":""}